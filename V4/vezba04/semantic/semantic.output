Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: type _ID $@1 _LPAREN parameter _RPAREN body

    6 type: _TYPE

    7 parameter: %empty
    8          | type _ID

    9 body: _LBRACKET variable_list statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: vars _SEMICOLON

   13 $@2: %empty

   14 vars: type $@2 _ID
   15     | vars _COMMA _ID

   16 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

   17 inc_statement: _ID _INC _SEMICOLON

   18 statement_list: %empty
   19               | statement_list statement

   20 statement: compound_statement
   21          | assignment_statement
   22          | if_statement
   23          | return_statement
   24          | inc_statement
   25          | do_statement

   26 compound_statement: _LBRACKET statement_list _RBRACKET

   27 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   28 num_exp: exp
   29        | num_exp _AROP exp

   30 exp: literal
   31    | _ID
   32    | function_call
   33    | _LPAREN num_exp _RPAREN

   34 literal: _INT_NUMBER
   35        | _UINT_NUMBER

   36 $@3: %empty

   37 function_call: _ID $@3 _LPAREN argument _RPAREN

   38 argument: %empty
   39         | num_exp

   40 if_statement: if_part
   41             | if_part _ELSE statement

   42 if_part: _IF _LPAREN rel_exp _RPAREN statement

   43 rel_exp: num_exp _RELOP num_exp

   44 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 6
_IF (259) 42
_ELSE (260) 41
_RETURN (261) 44
_ID (262) 5 8 14 15 16 17 27 31 37
_INT_NUMBER (263) 34
_UINT_NUMBER (264) 35
_LPAREN (265) 5 16 33 37 42
_RPAREN (266) 5 16 33 37 42
_LBRACKET (267) 9 26
_RBRACKET (268) 9 26
_ASSIGN (269) 27
_SEMICOLON (270) 12 16 17 27 44
_AROP (271) 29
_RELOP (272) 16 43
_COMMA (273) 15
_INC (274) 17
_DO (275) 16
_WHILE (276) 16
ONLY_IF (277)


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
program (24)
    on left: 1, on right: 0
function_list (25)
    on left: 2 3, on right: 1 3
function (26)
    on left: 5, on right: 2 3
$@1 (27)
    on left: 4, on right: 5
type (28)
    on left: 6, on right: 5 8 14
parameter (29)
    on left: 7 8, on right: 5
body (30)
    on left: 9, on right: 5
variable_list (31)
    on left: 10 11, on right: 9 11
variable (32)
    on left: 12, on right: 11
vars (33)
    on left: 14 15, on right: 12 15
$@2 (34)
    on left: 13, on right: 14
do_statement (35)
    on left: 16, on right: 25
inc_statement (36)
    on left: 17, on right: 24
statement_list (37)
    on left: 18 19, on right: 9 19 26
statement (38)
    on left: 20 21 22 23 24 25, on right: 16 19 41 42
compound_statement (39)
    on left: 26, on right: 20
assignment_statement (40)
    on left: 27, on right: 21
num_exp (41)
    on left: 28 29, on right: 27 29 33 39 43 44
exp (42)
    on left: 30 31 32 33, on right: 28 29
literal (43)
    on left: 34 35, on right: 16 30
function_call (44)
    on left: 37, on right: 32
$@3 (45)
    on left: 36, on right: 37
argument (46)
    on left: 38 39, on right: 37
if_statement (47)
    on left: 40 41, on right: 22
if_part (48)
    on left: 42, on right: 40 41
rel_exp (49)
    on left: 43, on right: 42
return_statement (50)
    on left: 44, on right: 23


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    6 type: _TYPE .

    $default  reduce using rule 6 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: type . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: type _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    5 function: type _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 10


State 10

    5 function: type _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 7 (parameter)

    type       go to state 11
    parameter  go to state 12


State 11

    8 parameter: type . _ID

    _ID  shift, and go to state 13


State 12

    5 function: type _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 14


State 13

    8 parameter: type _ID .

    $default  reduce using rule 8 (parameter)


State 14

    5 function: type _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 15

    body  go to state 16


State 15

    9 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 17


State 16

    5 function: type _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 17

    9 body: _LBRACKET variable_list . statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    $default  reduce using rule 18 (statement_list)

    type            go to state 18
    variable        go to state 19
    vars            go to state 20
    statement_list  go to state 21


State 18

   14 vars: type . $@2 _ID

    $default  reduce using rule 13 ($@2)

    $@2  go to state 22


State 19

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: vars . _SEMICOLON
   15 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 23
    _COMMA      shift, and go to state 24


State 21

    9 body: _LBRACKET variable_list statement_list . _RBRACKET
   19 statement_list: statement_list . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _RBRACKET  shift, and go to state 29
    _DO        shift, and go to state 30

    do_statement          go to state 31
    inc_statement         go to state 32
    statement             go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 22

   14 vars: type $@2 . _ID

    _ID  shift, and go to state 39


State 23

   12 variable: vars _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 24

   15 vars: vars _COMMA . _ID

    _ID  shift, and go to state 40


State 25

   42 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 41


State 26

   44 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 46
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 27

   17 inc_statement: _ID . _INC _SEMICOLON
   27 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 50
    _INC     shift, and go to state 51


State 28

   26 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 18 (statement_list)

    statement_list  go to state 52


State 29

    9 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 30

   16 do_statement: _DO . statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _DO        shift, and go to state 30

    do_statement          go to state 31
    inc_statement         go to state 32
    statement             go to state 53
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 31

   25 statement: do_statement .

    $default  reduce using rule 25 (statement)


State 32

   24 statement: inc_statement .

    $default  reduce using rule 24 (statement)


State 33

   19 statement_list: statement_list statement .

    $default  reduce using rule 19 (statement_list)


State 34

   20 statement: compound_statement .

    $default  reduce using rule 20 (statement)


State 35

   21 statement: assignment_statement .

    $default  reduce using rule 21 (statement)


State 36

   22 statement: if_statement .

    $default  reduce using rule 22 (statement)


State 37

   40 if_statement: if_part .
   41             | if_part . _ELSE statement

    _ELSE  shift, and go to state 54

    $default  reduce using rule 40 (if_statement)


State 38

   23 statement: return_statement .

    $default  reduce using rule 23 (statement)


State 39

   14 vars: type $@2 _ID .

    $default  reduce using rule 14 (vars)


State 40

   15 vars: vars _COMMA _ID .

    $default  reduce using rule 15 (vars)


State 41

   42 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 55
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    rel_exp        go to state 56


State 42

   31 exp: _ID .
   37 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 36 ($@3)
    $default  reduce using rule 31 (exp)

    $@3  go to state 57


State 43

   34 literal: _INT_NUMBER .

    $default  reduce using rule 34 (literal)


State 44

   35 literal: _UINT_NUMBER .

    $default  reduce using rule 35 (literal)


State 45

   33 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 58
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 46

   29 num_exp: num_exp . _AROP exp
   44 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 59
    _AROP       shift, and go to state 60


State 47

   28 num_exp: exp .

    $default  reduce using rule 28 (num_exp)


State 48

   30 exp: literal .

    $default  reduce using rule 30 (exp)


State 49

   32 exp: function_call .

    $default  reduce using rule 32 (exp)


State 50

   27 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 61
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 51

   17 inc_statement: _ID _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 62


State 52

   19 statement_list: statement_list . statement
   26 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _RBRACKET  shift, and go to state 63
    _DO        shift, and go to state 30

    do_statement          go to state 31
    inc_statement         go to state 32
    statement             go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 53

   16 do_statement: _DO statement . _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 64


State 54

   41 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _DO        shift, and go to state 30

    do_statement          go to state 31
    inc_statement         go to state 32
    statement             go to state 65
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 55

   29 num_exp: num_exp . _AROP exp
   43 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 60
    _RELOP  shift, and go to state 66


State 56

   42 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 67


State 57

   37 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 68


State 58

   29 num_exp: num_exp . _AROP exp
   33 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 69
    _AROP    shift, and go to state 60


State 59

   44 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 44 (return_statement)


State 60

   29 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    exp            go to state 70
    literal        go to state 48
    function_call  go to state 49


State 61

   27 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   29 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 71
    _AROP       shift, and go to state 60


State 62

   17 inc_statement: _ID _INC _SEMICOLON .

    $default  reduce using rule 17 (inc_statement)


State 63

   26 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 26 (compound_statement)


State 64

   16 do_statement: _DO statement _WHILE . _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 72


State 65

   41 if_statement: if_part _ELSE statement .

    $default  reduce using rule 41 (if_statement)


State 66

   43 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 73
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 67

   42 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _DO        shift, and go to state 30

    do_statement          go to state 31
    inc_statement         go to state 32
    statement             go to state 74
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 68

   37 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    $default  reduce using rule 38 (argument)

    num_exp        go to state 75
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    argument       go to state 76


State 69

   33 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 33 (exp)


State 70

   29 num_exp: num_exp _AROP exp .

    $default  reduce using rule 29 (num_exp)


State 71

   27 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 27 (assignment_statement)


State 72

   16 do_statement: _DO statement _WHILE _LPAREN . _ID _RELOP literal _RPAREN _SEMICOLON

    _ID  shift, and go to state 77


State 73

   29 num_exp: num_exp . _AROP exp
   43 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 60

    $default  reduce using rule 43 (rel_exp)


State 74

   42 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 42 (if_part)


State 75

   29 num_exp: num_exp . _AROP exp
   39 argument: num_exp .

    _AROP  shift, and go to state 60

    $default  reduce using rule 39 (argument)


State 76

   37 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 78


State 77

   16 do_statement: _DO statement _WHILE _LPAREN _ID . _RELOP literal _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 79


State 78

   37 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 37 (function_call)


State 79

   16 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP . literal _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44

    literal  go to state 80


State 80

   16 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 81


State 81

   16 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 82


State 82

   16 do_statement: _DO statement _WHILE _LPAREN _ID _RELOP literal _RPAREN _SEMICOLON .

    $default  reduce using rule 16 (do_statement)
